---
# Copyright (c) 2020 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

variables:
  # The cache and install prefix paths must be relative to and reside inside the project directory ($CI_PROJECT_DIR),
  # because cache:paths and artifacts:paths do not support absolute paths or linking outside the project directory.
  # Ref.: https://docs.gitlab.com/ce/ci/yaml/README.html
  BUILD_DIR: '$CI_PROJECT_DIR/build/${CC}-${CXX}-${BUILD_TYPE}'
  CCACHE_DIR: '$CI_PROJECT_DIR/.cache/ccache/${CC}-${CXX}-${BUILD_TYPE}'
  INSTALL_PREFIX: '$CI_PROJECT_DIR/.local/${CC}-${CXX}-${BUILD_TYPE}'
  # PATH variable cannot be set here
  # Ref.: https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27226

default:
  cache:
    paths:
      - .cache

.build-linux: &build-linux
  artifacts:
    paths:
      - .local
      - build
  before_script:
    - export PATH=/usr/lib/ccache:$PATH
    - whoami
    - nproc
    - echo `which $CC`
    - echo `which $CXX`
    - cmake --version
    - ctest --version
    - ccache -s
    # Symbol visibility is set to default because Boost.Test 1.67
    # from Debian 10 (Buster) has issues with hidden symbols
    # Ref.: https://github.com/boostorg/test/issues/199
    - >
      export BOOST_VERSION="$(grep -F '#define BOOST_VERSION ' /usr/include/boost/version.hpp | awk '{ print $3; }')";
      echo "BOOST_VERSION: $BOOST_VERSION";
      if [ "$BOOST_VERSION" = "106700" ]; then
          CMAKE_VISIBILITY_OPTIONS=\
      '     -DCMAKE_CXX_VISIBILITY_PRESET=default'\
      '     -DCMAKE_C_VISIBILITY_PRESET=default  '\
      '     -DCMAKE_VISIBILITY_INLINES_HIDDEN=OFF' ;
      else
          CMAKE_VISIBILITY_OPTIONS= ;
      fi
    # Build hbrs-cmake
    - mkdir -p "$INSTALL_PREFIX/src" && cd "$INSTALL_PREFIX/src"
    - >
      if [ ! -e hbrs-cmake ]; then
          git clone --depth 1 https://github.com/JM1/hbrs-cmake.git &&
          cd hbrs-cmake/;
      else
          cd hbrs-cmake/ &&
          git reset --hard origin &&
          git pull;
      fi
    - if [ ! -e build ]; then mkdir build; fi
    - cd build/
    - >
      cmake \
        "-DCMAKE_BUILD_TYPE=${BUILD_TYPE}" \
        "-DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX}" \
        ..
    - make "-j$(nproc)"
    - make install
    - cd ../../
    # Build hbrs-mpl
    - mkdir -p "$INSTALL_PREFIX/src" && cd "$INSTALL_PREFIX/src"
    - >
      if [ ! -e hbrs-mpl ]; then
          git clone --depth 1 https://github.com/JM1/hbrs-mpl.git &&
          cd hbrs-mpl/;
      else
          cd hbrs-mpl/ &&
          git reset --hard origin &&
          git pull;
      fi
    - if [ ! -e build ]; then mkdir build; fi
    - cd build/
    - >
      cmake \
        "-DCMAKE_BUILD_TYPE=${BUILD_TYPE}" \
        "-DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX}" \
        -DHBRS_MPL_ENABLE_TESTS=OFF \
        -DHBRS_MPL_ENABLE_BENCHMARKS=OFF \
        -DHBRS_MPL_ENABLE_ELEMENTAL=ON \
        -DHBRS_MPL_ENABLE_MATLAB=OFF \
        $CMAKE_VISIBILITY_OPTIONS \
        ..
    - make "-j$(nproc)"
    - make install
    - cd ../../
  script:
    - export PATH=/usr/lib/ccache:$PATH
    - ccache -s
    - cd "$CI_PROJECT_DIR"
    - if [ ! -e "$BUILD_DIR" ]; then mkdir -p "$BUILD_DIR"; fi
    - cd "$BUILD_DIR"
    - >
      cmake \
        "-DCMAKE_BUILD_TYPE=${BUILD_TYPE}" \
        "-DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX}" \
        -DHBRS_THETA_UTILS_ENABLE_TESTS=ON \
        $CMAKE_VISIBILITY_OPTIONS \
        "$CI_PROJECT_DIR" || { cat CMakeFiles/CMakeError.log; exit 255; };
    - make "-j$(nproc)"
    - ccache -s
    - make install

.test-linux: &test-linux
  script:
    - cd "$BUILD_DIR"
    - for i in $(seq 5); do ctest --output-on-failure || exit 255; done

.matrix-gcc7-clang7: &matrix-gcc7-clang7
  parallel:
    matrix:
      - CC: gcc-7
        CXX: g++-7
        BUILD_TYPE: Debug
      - CC: gcc-7
        CXX: g++-7
        BUILD_TYPE: MinSizeRel
      - CC: gcc-7
        CXX: g++-7
        BUILD_TYPE: RelWithDebInfo
      - CC: gcc-7
        CXX: g++-7
        BUILD_TYPE: Release
      - CC: clang-7
        CXX: clang++-7
        BUILD_TYPE: Debug
      - CC: clang-7
        CXX: clang++-7
        BUILD_TYPE: Release

build-linux-debian-buster:
  extends: .build-linux
  stage: build
  image: jm1337/debian-dev-hbrs:buster
  cache:
    key: "linux-debian-buster"
  <<: *matrix-gcc7-clang7

test-linux-debian-buster:
  extends: .test-linux
  stage: test
  image: jm1337/debian-dev-hbrs:buster
  cache: {}
  <<: *matrix-gcc7-clang7
  needs:
    - job: build-linux-debian-buster
      artifacts: true

.matrix-gcc10-clang10: &matrix-gcc10-clang10
  parallel:
    matrix:
      - CC: gcc-10
        CXX: g++-10
        BUILD_TYPE: Debug
      - CC: gcc-10
        CXX: g++-10
        BUILD_TYPE: MinSizeRel
      - CC: gcc-10
        CXX: g++-10
        BUILD_TYPE: RelWithDebInfo
      - CC: gcc-10
        CXX: g++-10
        BUILD_TYPE: Release
      - CC: clang-10
        CXX: clang++-10
        BUILD_TYPE: Debug
      - CC: clang-10
        CXX: clang++-10
        BUILD_TYPE: Release

build-linux-debian-bullseye:
  extends: .build-linux
  stage: build
  image: jm1337/debian-dev-hbrs:bullseye
  cache:
    key: "linux-debian-bullseye"
  <<: *matrix-gcc10-clang10

test-linux-debian-bullseye:
  extends: .test-linux
  stage: test
  image: jm1337/debian-dev-hbrs:bullseye
  cache: {}
  <<: *matrix-gcc10-clang10
  needs:
    - job: build-linux-debian-bullseye
      artifacts: true
